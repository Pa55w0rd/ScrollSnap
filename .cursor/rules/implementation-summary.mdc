---
alwaysApply: false
description: 局部滚动区域截图功能实现总结
---

# 局部滚动区域截图功能实现总结

## 实现时间
2025-01-27

## 功能概述

为 Chrome 扩展添加了局部滚动区域截图功能，用户现在可以选择截取页面中特定的滚动容器（如聊天窗口、表格等），而不仅限于整页截图。

## 核心实现

### 1. 可滚动元素检测 ([src/content.js](mdc:src/content.js))

```javascript
function isScrollable(element) {
  const style = window.getComputedStyle(element);
  const overflowY = style.overflowY;
  const overflowX = style.overflowX;
  
  const hasVerticalScroll = (overflowY === 'scroll' || overflowY === 'auto') && 
                           element.scrollHeight > element.clientHeight;
  const hasHorizontalScroll = (overflowX === 'scroll' || overflowX === 'auto') && 
                             element.scrollWidth > element.clientWidth;
  
  return hasVerticalScroll || hasHorizontalScroll;
}
```

### 2. 可视化区域选择器

- 半透明遮罩层（z-index: 2147483646）
- 鼠标悬停时蓝色高亮边框
- 顶部提示信息（z-index: 2147483647）
- ESC 键取消功能

### 3. html2canvas 截图方案

```javascript
async function captureScrollableElement(scrollContainer, format, quality) {
  // 1. 保存原始样式和滚动位置
  const originalOverflow = scrollContainer.style.overflow;
  const originalScrollTop = scrollContainer.scrollTop;
  
  // 2. 展开容器显示完整内容
  scrollContainer.style.overflow = 'visible';
  scrollContainer.style.maxHeight = 'none';
  scrollContainer.style.height = 'auto';
  
  // 3. 使用 html2canvas 渲染
  const canvas = await html2canvas(scrollContainer, {
    allowTaint: true,
    useCORS: true,
    scrollY: 0,
    scrollX: 0,
    width: scrollWidth,
    height: scrollHeight,
    backgroundColor: '#ffffff'
  });
  
  // 4. 恢复原始样式和位置
  scrollContainer.style.overflow = originalOverflow;
  scrollContainer.scrollTop = originalScrollTop;
  
  // 5. 下载图片
  const dataUrl = canvas.toDataURL(`image/${format}`, quality);
  // ... 发送到 background script 下载
}
```

## 修改文件列表

### 核心逻辑文件

1. **[src/content.js](mdc:src/content.js)**
   - 新增 363 行代码
   - 5 个新函数：
     - `isScrollable()` - 判断元素是否可滚动
     - `getUniqueSelector()` - 获取元素的唯一 CSS 选择器
     - `findScrollableElements()` - 查找页面所有可滚动元素
     - `enableRegionSelector()` - 启用可视化区域选择器
     - `captureScrollableElement()` - 截取滚动元素的完整内容

2. **[src/background.js](mdc:src/background.js)**
   - 更新默认设置，添加 `captureMode: 'fullpage'`

### UI 文件

3. **[src/popup/popup.html](mdc:src/popup/popup.html)**
   - 添加截图模式选择下拉框
   - 使用 `data-i18n-option` 属性支持 option 元素本地化

4. **[src/popup/popup.js](mdc:src/popup/popup.js)**
   - 添加 option 元素本地化支持
   - 保存/加载 `captureMode` 设置
   - 根据模式执行不同的截图逻辑
   - 区域模式：关闭 popup 并启用选择器
   - 整页模式：显示进度条并执行原有逻辑

5. **[src/popup/popup.css](mdc:src/popup/popup.css)**
   - 无需修改（新增的 select 元素使用已有样式）

### 本地化文件

6. **[_locales/zh_CN/messages.json](mdc:_locales/zh_CN/messages.json)**
   - 新增 3 个消息键：
     - `captureMode` - "截图模式"
     - `captureModeFullPage` - "完整页面"
     - `captureModeRegion` - "选择区域"
   - 更新 `extDescription` - 添加"支持整页和局部区域截图"

## 消息通信流程

### 整页截图流程（原有）
```
popup.js → startCapture → content.js → captureFullPage()
```

### 区域截图流程（新增）
```
popup.js → enableRegionSelector → content.js → enableRegionSelector()
  → 用户点击区域 → captureScrollableElement()
  → html2canvas 渲染 → downloadCapture → background.js
```

## 技术亮点

### 1. 元素选择器生成
- 优先使用 `id` 属性
- 其次使用 `className` + `nth-child`
- 生成完整的 CSS 选择器路径

### 2. 样式隔离
- 使用 Shadow DOM 隔离进度提示样式
- 防止页面样式影响扩展 UI

### 3. 状态管理
- `window._regionSelectorActive` - 防止重复启用选择器
- `window._isCapturingRegion` - 防止重复截图

### 4. 用户体验优化
- 实时高亮可滚动区域
- 显示区域高度信息
- ESC 键快速取消
- 清晰的进度提示

## 依赖项

- **html2canvas** - 已在 [manifest.json](mdc:manifest.json) 中注入
  - 文件：`src/lib/html2canvas.min.js`
  - 用途：将 DOM 元素渲染为 Canvas

## 性能考虑

### 内存管理
- Canvas 使用后立即清理（`canvas.width = 1`）
- 恢复原始样式和滚动位置
- 使用 `await sleep()` 等待渲染完成

### 用户交互
- 区域选择时关闭 popup，避免遮挡
- 使用事件委托处理鼠标移动
- 完成后自动清理事件监听器

## 已知限制

### 1. 虚拟滚动
- 问题：虚拟滚动列表只渲染可见部分
- 解决：建议用户手动滚动加载所有内容

### 2. 懒加载图片
- 问题：未加载的图片显示为占位符
- 解决：展开容器后等待 200ms 让图片加载

### 3. 跨域资源
- 问题：跨域图片可能显示为空白
- 解决：html2canvas 使用 `useCORS: true`，但需服务器支持

### 4. 复杂 CSS
- 问题：某些 CSS 效果无法完美渲染
- 限制：滤镜、混合模式、部分 transform

## 测试建议

### 必测场景
- [x] 固定高度的 div 滚动
- [ ] 聊天应用（如 Mira 网站）
- [ ] 数据表格
- [ ] 模态对话框内的滚动
- [ ] 嵌套滚动容器
- [ ] Flexbox 布局的滚动区域

### 边界测试
- [ ] 超大滚动区域（>10000px）
- [ ] 包含视频的滚动区域
- [ ] 包含 iframe 的滚动区域
- [ ] 动态更新内容的区域

## 未来改进方向

### 功能增强
1. **手动框选模式**
   - 让用户拖拽框选截图区域
   - 不依赖元素的 overflow 属性

2. **批量截图**
   - 自动检测并截取页面所有滚动区域
   - 生成多张图片

3. **滚动动画**
   - 截图时显示滚动进度
   - 更好的视觉反馈

### 技术优化
1. **分段渲染**
   - 对超大区域使用分段渲染
   - 避免 Canvas 大小限制

2. **缓存优化**
   - 缓存常用区域的选择器
   - 快速重新截图

3. **格式支持**
   - 支持 WebP 格式
   - 支持 PDF 导出

## 版本信息

- **当前版本**：v1.1.0
- **兼容性**：Chrome 88+（Manifest V3）
- **依赖版本**：html2canvas 1.x

## 相关规则文件

- [partial-scroll-capture.mdc](mdc:.cursor/rules/partial-scroll-capture.mdc) - 详细设计方案
- [screenshot-logic.mdc](mdc:.cursor/rules/screenshot-logic.mdc) - 整页截图逻辑
- [javascript-coding-standards.mdc](mdc:.cursor/rules/javascript-coding-standards.mdc) - 编码规范
